{
  "contract_name": "floaty",
  "contract_version": "0.0.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "beneficiary",
      "verifier"
    ],
    "properties": {
      "beneficiary": {
        "type": "string"
      },
      "verifier": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Releasing all funds in the contract to the beneficiary. This is the only \"proper\" action of this demo contract.",
        "type": "object",
        "required": [
          "release"
        ],
        "properties": {
          "release": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "returns a human-readable representation of the verifier use to ensure query path works in integration tests",
        "type": "object",
        "required": [
          "verifier"
        ],
        "properties": {
          "verifier": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "This returns cosmwasm_std::AllBalanceResponse to demo use of the querier",
        "type": "object",
        "required": [
          "other_balance"
        ],
        "properties": {
          "other_balance": {
            "type": "object",
            "required": [
              "address"
            ],
            "properties": {
              "address": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "other_balance": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AllBalanceResponse",
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "Returns all non-zero coins held by this account.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Coin"
          }
        }
      },
      "definitions": {
        "Coin": {
          "type": "object",
          "required": [
            "amount",
            "denom"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "denom": {
              "type": "string"
            }
          }
        },
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "verifier": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "VerifierResponse",
      "type": "object",
      "required": [
        "verifier"
      ],
      "properties": {
        "verifier": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
